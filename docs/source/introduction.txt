.. index:: 
	single: Introduction; Introduction

=============
Introduction
=============

Since the first release of Ring Programming Language I was wondering why there's no support for Windows Registry as I used to deal with frequently during my previous Visual Basic journey. In that time I realized that there's no need to support windows registry in order to build a new programming language as we can use files to save application's settings. But I think supporting Windows Registry will give a big chance for the all community of Ring programmers and developers who like to use Windows Registry for a reason or another. Since that time, the decision of making such support has been made to bring this mysterious world into Ring environment.

**Windows Registry** is a place where, in addition to save your application settings in it, you can find all of windows and other applications/programms settings that help in their operation, so manipulating in a such place may be the demand for some applications like those controlling Windows Startup Programs.

.. index::
	pair: Introduction; Ring_WinCReg Extension
	
Ring_WinCReg Extension
=======================

Ring WinCReg extension is a very light, easy, and powerful extension for Ring Programming Language that has been made to bring all means of easiness in the dealing with Windows Registry. It gives you the ability to do from minor registry needs like saving or restoring settings to more superior goals like reaching and controlling every single key or value in the whole registry tree.

This extension has been made on top of previously created C++ language class called "Registry Wrapper Class" that has been published on `CodeProject in this article <http://www.codeproject.com/Articles/8953/Registry-Wrapper-Class-CRegistry>`_.

.. index::
	pair: Introduction; RCRegistry Class
	
RCRegistry Class 
=================

RCRegistry class is a ring class that has been made to make using ring_wincreg extension functions easier by using the style of using "Registry Wrapper Class" in C++. I found this style is reasonable and readable better than just using the ring_wincreg original functions. It can be used by loading the file that contain it (wincreg.ring).

.. index::
	pair: Introduction; Simple Example
	
Simple Example
===============

This is a simple ring code that use this extension:

.. code-block:: none

	Load "wincreg.ring"
	
	Reg = new RCRegistry
	
	Reg.OpenKey([HKEY_CURRENT_USER, "Software\MyApp"]) 
	# This will create the Key "MyApp" if its not present then it will be Opened
	
	Reg["AppVersion"].Set("2.3")
	
	Reg["AppPath"].Set(exeFolder())
	
	Reg.CloseKey()


